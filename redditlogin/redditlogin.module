<?php

/**
 * Set's up login functionality using the Reddit Oauth system.
 *
 * Can create user accounts, sync to existing ones and has a nifty admin
 * interface.
 */
define ( 'REDDIT_LOGIN_BLOCK_DEFAULT_TEXT', '
            <a class="button" href="reddit/login">Login with Reddit</a>
            <p style="color:gray;">Use this to login with your reddit account in the same manner as the last site.</p>' );

/**
 * Implements hook_block_info()
 *
 * Define's a simple login block that allows users to login using Reddit by
 * pushing a button.
 */
function reddit_login_block_info() {
	$blocks ['reddit_login_login_form'] = array (
			'info' => t ( "Login Block" ),
			'cache' => DRUPAL_CACHE_GLOBAL
	);
	return $blocks;
}
function reddit_login_block_view($delta = '') {
	$block = array ();
	switch ($delta) {
		case 'reddit_login_login_form' :
			{
				$block ['title'] = variable_get ( 'reddit_login_block_title', t ( 'Login with Reddit' ) );
				$block ['content'] = variable_get ( 'reddit_login_block_text', REDDIT_LOGIN_BLOCK_DEFAULT_TEXT );
			}
			break;
	}
	return $block;
}

/**
 * Implements hook_menu()
 */
function hook_menu() {
	$items = array();
	$items ['reddit/login'] = array (
			'type' => MENU_CALLBACK,
			'access callback' => TRUE,
			'page callback' => 'reddit_login_login_callback',
			'description' => 'Provides the callback for the login block.'
	);
	$items ['admin/config/reddit_login'] = array (
			'title' => 'Configure Reddit Login',
			'description' => 'Allows administrators to configure user-login using Reddit Oauth2.',
			'position' => 'right',
			'weight' => - 30,
			'page callback' => 'drupal_get_form',
			'page arguments' => array (
					'reddit_login_login_config_form'
			),
			'access arguments' => array (
					'administer site configuration'
			)
	);
	$items ['admin/config/reddit_login/block'] = array (
			'title' => 'Block Config',
			'type' => MENU_LOCAL_TASK,
			'description' => 'Modify the block',
			'page callback' => 'drupal_get_form',
			'page arguments' => array (
					'reddit_login_block_config_form'
			),
			'access arguments' => array (
					'administer site configuration'
			)
	);

	return $items;
}

/**
 * Implements hook_libraries_info().
 *
 * For defining external libraries.
 */
function reddit_login_libraries_info() {
	$libraries ['reddit'] = array (
			'name' => 'Reddit API',
			'vendor url' => 'http://github.com/clonemeagain/redditapi',
			'download url' => 'http://github.com/clonemeagain/redditapi/reddit.php',
			'version arguments' => array (
					'file' => 'reddit.php',
					'pattern' => '/Version (\d+)/',
					'lines' => 1
			),
			'files' => array (
					'php' => array (
							'reddit.php'
					)
			)
	);
	return $libraries;
}

/**
 * Create the admin interface to configure the Block
 *
 * @param array $form
 * @param array $form_state
 */
function reddit_login_block_config_form($form, &$form_state) {
	$form ['help'] = array (
			'#type' => 'markup',
			'#markup' => '<h2>Login Block Configuration</h2>'
	);
	$form ['title'] = array (
			'#type' => 'text',
			'#title' => 'Set block Title',
			'#value' => variable_get ( 'reddit_login_block_title', 'Login with Reddit' )
	);
	$form ['text'] = array (
			'#type' => 'textarea',
			'#title' => 'Set block HTML',
			'#value' => variable_get ( 'reddit_login_block_text', REDDIT_LOGIN_BLOCK_DEFAULT_TEXT )
	);
	return $form;
}
function reddit_login_block_config_form_validate($form, &$form_state) {
	// See if we have valid data..
	$doc = new DOMDocument ();
	$doc->loadhtml ( $form_state ['values'] ['text'] );
	$xpath = new DOMXPath ( $doc );
	$hrefs = $xpath->evaluate ( "/a" );
	if ($hrefs->length == 0) {
		form_set_error ( 'text', 'Please enter valid HTML, including a link to "reddit/login".' );
	}
}
function reddit_login_block_config_form_submit($form, &$form_state) {
	$msg = '';
	// Save the data.
	if (isset ( $form_state ['title'] ) && $form_state ['title']) {
		$t = $form_state ['title'];
		variable_set ( 'reddit_login_block_title', $t );
		$msg = 'Set the block title to: ' . $t;
	}
	if (isset ( $form_state ['text'] ) && $form_state ['text']) {
		$text = $form_state ['text'];
		variable_set ( 'reddit_login_block_text', $text );
		$msg .= "\nSet the block html to: " . htmlentities ( $text ) . "\n";
	}
	if ($msg) {
		drupal_set_message ( $msg );
	}
}

/**
 * Provide site admins with form to add API keys and set redirection URL's etc.
 *
 * @param array $form
 * @param array $form_state
 */
function reddit_login_login_config_form($form, &$form_state) {

	// TODO: Verify library is loaded, display status of library code, otherwise, display instructions to download library.
	$form ['help'] = array (
			'#type' => 'markup',
			'#markup' => '<h2>' . t ( 'Configure Reddit login' ) . '</h2>
			<p>' . t ( 'Uses <a href="@url">Reddit.com</a>\'s Oauth2 client authentication to login users.' ) . '</p>'
	);

	$form ['create_on_new_user'] = array (
			'#type' => 'checkbox',
			'#title' => t ( 'Create a new user from Reddit name?' ),
			'#description' => t ( 'Enable this to create a matching Drupal account for each new Reddit user who uses this function. Disable it, and those without Drupal accounts will not be able to login with a Reddit account that matches.' ),
			'#default_value' => variable_get ( 'reddit_login_create_on_new_name', 0 )
	);
	$form ['allow_admins_to_login'] = array (
			'#type' => 'checkbox',
			'#title' => t ( 'Allow Drupal Admin users to login with a Reddit account?' ),
			'#default_value' => variable_get ( 'reddit_login_login_admins', 0 )
	);

	$form ['API'] = array (
			'#type' => 'fieldset',
			'#title' => t ( 'Reddit API' ),
			'#description' => t ( 'If you don\'t have these details, please <a href="https://www.reddit.com/prefs/apps/">Create a Reddit App</a> using your Reddit Account first' )
	);

	$form ['API'] ['id'] = array (
			'#type' => 'textfield',
			'#title' => t ( 'Reddit API Client ID' ),
			'#default_value' => variable_get ( 'reddit_login_client_id', '' )
	);
	$form ['API'] ['secret'] = array (
			'#type' => 'textfield',
			'#title' => t ( 'Reddit API Client Secret' ),
			'#default_value' => variable_get ( 'reddit_login_client_secret', '' )
	);
	$form ['API'] ['redirect'] = array (
			'#type' => 'textfield',
			'#title' => t ( 'Redirect URL (upon client successful Reddit login)' ),
			'#default_value' => variable_get ( 'reddit_login_redirect_url', '' )
	);
	$form ['API'] ['Advanced'] = array (
			'#type' => 'fieldset',
			'#title' => t ( 'Advanced API Settings' ),
			'#description' => t ( 'Change these if Reddit changes them.. Which they likely won\'t.. but, just in case, alternatively, if you run your own version of reddit, or fork etc.. ' )
	);
	$form ['API'] ['Advanced'] ['authorize_url'] = array (
			'#type' => 'textfield',
			'#title' => t ( 'Authorize URL (for Oauth2)' ),
			'#default_value' => variable_get ( 'reddit_login_authorize_url', 'https://ssl.reddit.com/api/v1/authorize' )
	);
	$form ['API'] ['Advanced'] ['access_token_url'] = array (
			'#type' => 'textfield',
			'#title' => 'Access Token URL',
			'#default_value' => variable_get ( 'reddit_login_access_token_url', 'https://ssl.reddit.com/api/v1/access_token' )
	);
	$form ['API'] ['Advanced'] ['user_url'] = array (
			'#type' => 'textfield',
			'#title' => 'Reddit User URL',
			'#default_value' => variable_get ( 'reddit_login_user_url', 'https://oauth.reddit.com/api/v1/me' )
	);

	return $form;
}
function reddit_login_login_config_form_submit($form, &$form_state) {
	if (isset ( $form_state ['values'] ['create_on_new_user'] )) {
		variable_set ( 'reddit_login_create_on_new_name', 1 );
	} else {
		variable_set ( 'reddit_login_create_on_new_name', 0 );
	}
	if (isset ( $form_state ['values'] ['allow_admins_to_login'] )) {
		variable_set ( 'reddit_login_login_admins', 1 );
	} else {
		variable_set ( 'reddit_login_login_admins', 0 );
	}

	// Save all API settings.
	variable_set ( 'reddit_login_client_id', $form_state ['values'] ['API'] ['id'] );
	variable_set ( 'reddit_login_client_secret', $form_state ['values'] ['API'] ['secret'] );
	variable_set ( 'reddit_login_redirect_url', $form_state ['values'] ['API'] ['redirect'] );
	variable_set ( 'reddit_login_authorize_url', $form_state ['values'] ['API'] ['Advanced'] ['authorize_url'] );
	variable_set ( 'reddit_login_access_token_url', $form_state ['values'] ['API'] ['Advanced'] ['access_token_url'] );
	variable_set ( 'reddit_login_user_url', $form_state ['values'] ['API'] ['Advanced'] ['user_url'] );
	drupal_set_message ( 'Settings saved.' );
}

/**
 * Actually process a login.
 */
function reddit_login_login_callback() {
	// Tell the system to never cache this callback.. just in case.
	drupal_page_is_cacheable ( FALSE );

	// We don't assume that any other reddit module is available, id's must be set in module admin.
	$clientId = variable_get ( 'reddit_login_client_id', '' );
	$clientSecret = variable_get ( 'reddit_login_client_secret', '' );
	$redirectUrl = variable_get ( 'reddit_login_redirect_url', '' );
	$authorize_url = variable_get ( 'reddit_login_authorize_url', '' );
	$access_token_url = variable_get ( 'reddit_login_access_token_url', '' );
	$user_url = variable_get ( 'reddit_login_user_url', '' );

	if (! $clientSecret || ! $clientId || ! $redirectUrl || ! $authorize_url || ! $access_token_url || ! $user_url) {
		watchdog ( 'reddit_login', t ( 'Make sure every textfield is configured for reddit_login, otherwise you will get this.' ), 'error' );
		drupal_set_message ( t ( 'Unable to login, module reddit_login is misconfigured: ' ) . l ( t ( 'Please correct this ASAP!' ), 'admin/redit_login/login' ), 'error' );
		drupal_redirect ();
	}
	global $base_url;

	// Set the user_agent for the reddit-ing.. for Reddit's servers to receive.
	$ua = array (
			'User-Agent' => $base_url . ' :: Drupal.org/project/reddit_login UserAgent v1'
	);

	// TODO: Finish this code..
	throw new ErrorException ( 'Unimplemented.' );

	_reddit_login_user ( $name );
}

/**
 * Function that takes a name, and, quite dangerously, LOGS THAT ACCOUNT IN!
 * So..
 * be careful?
 *
 * @param string $name
 */
function _reddit_login_user($name) {
	// See if site-admin have decided new users with reddit accounts can be created here.
	$create_account_no_match = variable_get ( 'reddit_login_create_on_new_name', 0 );
	$allow_admins_to_login_with_reddit = variable_get ( 'reddit_login_login_admins', 0 );
	try {
		// Load the user's id matching that name.
		$uid = db_query ( 'SELECT uid FROM {users} WHERE name = :name LIMIT 1', array (
				':name' => $name
		) )->fetchField ();
		if (! $uid) {
			// We did't find the user in the existing Drupal user table.
			if ($create_account_no_match) {
				// Make an account for them as per site-admin's instructions!
				$user = _reddit_login_create_user ( $name );
				$uid = $user->uid;
			} else {
				watchdog ( 'reddit_login', 'Failed to find user @name.. attempt at legacy auth failed!.', array (
						'@name' => $name
				) );
				drupal_set_message ( t ( "I don't think you can use this function, your name was not found in the database." ) );
				drupal_goto ();
			}
		}

		// Log user in.
		$login = array (
				'uid' => $uid
		);
		global $user;

		// Load the user object matching that name.
		$user = user_load ( $uid );

		if (! $user->uid) {
			// Drupal can't find the user
			watchdog ( 'reddit_login', "Unable to log in user [$name] via reddit_login.", 'error' );
			drupal_set_message ( 'Invalid login.', 'error' );
			drupal_goto ();
		}

		if (! $allow_admins_to_login_with_reddit) {
			// Quickly check this user account for "admin-ness" (default role-id is 3)
			$rid = variable_get ( 'reddit_login_admin_rid', 3 ); // Just in case it is different, we made a copy on install.
			if (in_array ( $rid, $user->roles )) {
				drupal_set_message ( t ( 'Sorry, you are unable to login with this account in this way.' ), 'error' );
				drupal_goto ();
			}
		}

		// Log user in.
		$a = array (
				'uid' => $user->uid
		);
		user_login_submit ( array (), $a ); // Overrides the $_SESSION.

		// TODO: Allow admin to determine redirect upon successful reddit_login!
		drupal_goto ( 'user/' . $user->uid . '/edit' );
	} catch ( Exception $e ) {
		watchdog ( 'reddit_login', $name . ' legacy login errors: ' . $e->getTraceAsString () );
		drupal_set_message ( t ( "Woah, something b0rked there. Try again?" ) );
		drupal_goto ();
	}
}

/**
 * Create a user account knowing just a name.
 *
 * @param string $name
 * @return stdClass $user
 * @throws Exception on empty $name
 */
function _reddit_login_create_user($name) {
	// Drupal default allows a single character username..
	// I'm guessing reddit does too.. couldn't see anywhere.
	// But we can't let empty account names become valid.. ever.
	if (! $name) {
		throw new Exception ( "Name is empty." );
	}
	$user = entity_create ( 'user', array () );
	// make a spoofed email address..
	$fake_email = $name . '.' . random ( 4 ) . '@localhost.local';

	$user->name = $name; // login same as reddit
	$user->status = 1; // Enable the user by default.
	                   // Set nescessary role to let the user log in.
	$user->roles = array_merge ( $roles, array (
			DRUPAL_AUTHENTICATED_RID
	) );
	// Set e-mail for lost password procedure
	$user->init = $fake_email;
	$user->mail = $fake_email;
	// Set hashed password, user will never know this password, but we can use "No current password" module to allow them to change it without knowing it.
	$user->pass = user_hash_password ( random ( 10 ) );

	return user_save ( $user );
}